Inorder traversal in a binary tree(USING STACKS)


#include <bits/stdc++.h>
using namespace std;

struct Node
{
    int data;
    struct Node *left, *right;
};

Node *newNode(int d)
{
    Node *temp = new Node;
    temp->data = d;
    temp->left = temp->right = NULL;
    return temp;
}

void Inorder(Node *root)
{
    stack<Node *>s;
    Node *curr=root;

    while(curr != NULL || s.empty() == false)
    {
        while(curr != NULL)
        {
            s.push(curr);
            curr=curr->left;
        }

        curr=s.top();
        s.pop();
        cout<<curr->data<<" ";
        curr=curr->right;
    }
}
int main()
{
    struct Node *root = newNode(10);
    root->left = newNode(11);
    root->left->left = newNode(7);
    root->left->right = newNode(12);
    root->right = newNode(9);
    root->right->left = newNode(15);
    root->right->right = newNode(8);
    Inorder(root);
    return 0;
}