Swap nodes in a linked list without swapping data


Input : 10->15->12->13->20->14,  x = 12, y = 20
Output: 10->15->20->13->12->14

Input : 10->15->12->13->20->14,  x = 10, y = 20
Output: 20->15->12->13->10->14

Input : 10->15->12->13->20->14,  x = 12, y = 13
Output: 10->15->13->12->20->14



#include<bits/stdc++.h>
using namespace std;

class Node
{
    public:
    int data;
    Node *next;
};

void push(Node **head_ref, int d)
{
    Node *temp=new Node();
    temp->data=d;
    temp->next=(*head_ref);
    (*head_ref)=temp;
}

void swapNodes(Node **head_ref, int x, int y)
{
    if(x==y)
        return ;
    
    Node *prevX=NULL, *currX=*head_ref;
    while(currX && currX->data != x)
    {
        prevX=currX;
        currX=currX->next;
    }
    Node *currY=*head_ref, *prevY=NULL;
    while(currY && currY->data != y)
    {
        prevY=currY;
        currY=currY->next;
    }

    if(currX == NULL || currY == NULL)
        return ;

    if(prevX != NULL)
        prevX->next=currY;
    else
        *head_ref=currY;

    
    if(prevY != NULL)
        prevY->next=currX;
    else
        *head_ref=currX;

    Node *temp=currY;
    currY->next=currX->next;
    currX->next=temp;

}
void display(Node *node)
{
    while(node != NULL)
    {
        cout<<node->data<<" ";
        node=node->next;
    }
}

int main()
{
    Node *head =NULL;
 
    /* The constructed linked list is:
    1->2->3->4->5->6->7 */
    push(&head, 7);
    push(&head, 6);
    push(&head, 5);
    push(&head, 4);
    push(&head, 3);
    push(&head, 2);
    push(&head, 1);
 
    cout << "Linked list before calling swapNodes() ";
    display(head);
 
    swapNodes(&head, 4, 3);
 
    cout << "\nLinked list after calling swapNodes() ";
    display(head);
    return 0;
}