
#include<bits/stdc++.h>
using namespace std;

struct node
{
	int data;
	struct node *next;
};


struct node *front =NULL;
struct node *rear =NULL;

void EnQueue(int x)
{
	struct node *temp= (struct node *)malloc(sizeof(struct node));
	temp->data=x;
	if(front==NULL)
		{
			front=rear=temp;
			rear->next=front;
		}
	else
	{
		rear->next=temp;
		rear=temp;
		rear->next=front;
	}
}

void DeQueue()
{
	struct node *temp;
	temp=front;
	if(front==NULL && rear == NULL)
	{
		cout<<"Empty List"<<endl;
	}
	else if(front==rear )
	{
		front=rear=NULL;
		free(temp);
	}
	else
	{
		front=front->next;
		rear->next=front;
		free(temp);
	}
}

int peek()
{
	if(front ==NULL && rear==NULL)
		cout<<"Empty\n";
	
	return (front->data);
}

void display()
{
	struct node *temp=front;
	if(front == NULL && rear ==NULL)
		cout<<"Empty\n";
	else
	{
		while(temp->next != front)
		{
			cout<<temp->data<<" ";
			temp=temp->next;
		}
		cout<<temp->data<<endl;
	
	}
}

int main()
{
	EnQueue(20);
	EnQueue(30);
	EnQueue(40);
	display();
	DeQueue();
	int y = peek();
	cout<< "The front element is "<<y<<endl;
	return 0;
}